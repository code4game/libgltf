find_path(GOOGLE_DRACO_PATH_INCLUDE NAMES draco PATHS external/draco/src)
find_path(GOOGLE_DRACO_PATH_BUILD NAMES draco HINTS external/draco/build)
find_library(GOOGLE_DRACO_LIBRARY_DRACODEC_DEBUG NAMES dracodec HINTS external/draco/build/Debug external/draco/build)
find_library(GOOGLE_DRACO_LIBRARY_DRACODEC_RELEASE NAMES dracodec HINTS external/draco/build/Release external/draco/build)
find_library(GOOGLE_DRACO_LIBRARY_DRACOENC_DEBUG NAMES dracoenc HINTS external/draco/build/Debug external/draco/build)
find_library(GOOGLE_DRACO_LIBRARY_DRACOENC_RELEASE NAMES dracoenc HINTS external/draco/build/Release external/draco/build)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(DRACO REQUIRED_VARS
    GOOGLE_DRACO_PATH_INCLUDE
    GOOGLE_DRACO_PATH_BUILD
    GOOGLE_DRACO_LIBRARY_DRACODEC_DEBUG
    GOOGLE_DRACO_LIBRARY_DRACODEC_RELEASE
    GOOGLE_DRACO_LIBRARY_DRACOENC_DEBUG
    GOOGLE_DRACO_LIBRARY_DRACOENC_RELEASE)

mark_as_advanced(
    GOOGLE_DRACO_PATH_INCLUDE
    GOOGLE_DRACO_PATH_BUILD
    GOOGLE_DRACO_LIBRARY_DRACODEC_DEBUG
    GOOGLE_DRACO_LIBRARY_DRACODEC_RELEASE
    GOOGLE_DRACO_LIBRARY_DRACOENC_DEBUG
    GOOGLE_DRACO_LIBRARY_DRACOENC_RELEASE)

set(GOOGLEDRACO_FOUND TRUE)
if(NOT IS_DIRECTORY ${GOOGLE_DRACO_PATH_INCLUDE})
    set(GOOGLEDRACO_FOUND FALSE)
endif()
if(NOT IS_DIRECTORY ${GOOGLE_DRACO_PATH_BUILD})
    set(GOOGLEDRACO_FOUND FALSE)
endif()
if(NOT EXISTS ${GOOGLE_DRACO_LIBRARY_DRACODEC_DEBUG})
    set(GOOGLEDRACO_FOUND FALSE)
endif()
if(NOT EXISTS ${GOOGLE_DRACO_LIBRARY_DRACODEC_RELEASE})
    set(GOOGLEDRACO_FOUND FALSE)
endif()
if(NOT EXISTS ${GOOGLE_DRACO_LIBRARY_DRACOENC_DEBUG})
    set(GOOGLEDRACO_FOUND FALSE)
endif()
if(NOT EXISTS ${GOOGLE_DRACO_LIBRARY_DRACOENC_RELEASE})
    set(GOOGLEDRACO_FOUND FALSE)
endif()
