name: 'coverage'

on:
  push:
    branches: [ master ]
    paths-ignore:
    - '!.github/coverage.yml'
    - 'docs/**'
    - '*.md'
    - 'LICENSE'
    - '.readthedocs.yml'
    - '.git*'

jobs:
  coveralls:
    name: 'for coveralls'
    runs-on: ubuntu-latest
    steps:
    - name: 'install dependencies'
      run: |
        sudo apt-get install valgrind gcovr
        sudo pip install wheel
        sudo pip install cpp-coveralls
    - name: 'checkout the project'
      uses: actions/checkout@v2
    - name: 'update submodules'
      run: |
        git submodule update --init external/rapidjson
        git submodule update --init external/draco
    - name: 'build and make'
      run: |
        mkdir build && cd build
        cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DLIBGLTF_CHARACTOR_ENCODING=UTF8 -DLIBGLTF_BUILD_COVERAGE=TRUE -DLIBGLTF_USE_GOOGLE_DRACO=TRUE -DLIBGLTF_USE_GOOGLE_DRACO_SUBMODULE=TRUE ../
        make
        cd ../
    - name: 'run valgrind and gcovr'
      run: |
        cd build
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/nothing.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/Monster/glTF/Monster.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/Monster/glTF-Binary/Monster.glb
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/Monster/glTF-Draco/Monster.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/Monster/glTF-Embedded/Monster.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/Avocado/glTF-pbrSpecularGlossiness/Avocado.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/Cameras/glTF/Cameras.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/EnvironmentTest/glTF/EnvironmentTest.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/EnvironmentTest/glTF-IBL/EnvironmentTest.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/MorphPrimitivesTest/glTF/MorphPrimitivesTest.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/Triangle/glTF/Triangle.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/TriangleWithoutIndices/glTF/TriangleWithoutIndices.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/TwoSidedPlane/glTF/TwoSidedPlane.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/UnlitTest/glTF/UnlitTest.gltf
        valgrind --leak-check=full --show-leak-kinds=all ./../output/bin/linux/runtest --coveralls ../resource/2.0/VertexColorTest/glTF/VertexColorTest.gltf
        gcov source/runtest/CMakeFiles/runtest.dir/runtest.cpp.gcda
        gcovr --root=../source/ .
        cd ../
        coveralls --repo-token ${{ secrets.COVERALLS_REPO_TOKEN }} -e ./source/runtest/ -e ./tools/ --exclude ./external/ -e ./build/CMakeFiles/ -e ./build/draco/ -e ./build/draco_compression_attributes_pred_schemes_dec.cc -e ./build/draco_compression_mesh_traverser.cc -e ./build/draco_dec_config.cc -e ./build/draco_enc_config.cc -e ./output/ --gcov-options '\-lp'
